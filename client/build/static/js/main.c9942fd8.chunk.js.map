{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","track","id","fetchResponse","a","fetch","response","json","initialTrackResponse","setState","customTrack","evt","preventDefault","custom","handleChange","target","name","value","console","log","this","className","cow","href","rel","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAGMA,E,4MACJC,MAAQ,CACNC,MAAO,GACPC,GAAI,I,EAMRC,c,sBAAgB,gCAAAC,EAAA,sEACWC,MAAM,cADjB,cACNC,EADM,gBAEuBA,EAASC,OAFhC,OAENC,EAFM,OAGNP,EAAQO,EAAqBP,MACnC,EAAKQ,SAAS,CAAER,UAJJ,2C,EAMhBS,Y,uCAAc,WAAMC,GAAN,qBAAAP,EAAA,6DACVO,EAAIC,iBACEV,EAAK,EAAKF,MAAME,GAFZ,SAGaG,MAAM,cAAD,OAAeH,IAHjC,cAGJI,EAHI,gBAIWA,EAASC,OAJpB,OAIJM,EAJI,OAKJZ,EAAQY,EAAOZ,MACrB,EAAKQ,SAAS,CAAER,QAAOC,GAAI,KANjB,4C,wDAQdY,aAAe,SAAAH,GACX,EAAKF,SAAL,eAAiBE,EAAII,OAAOC,KAAOL,EAAII,OAAOE,QAC9CC,QAAQC,IAAI,EAAKnB,MAAME,K,uDApB3B,WACIkB,KAAKjB,kB,oBAqBT,WACI,OACE,sBAAKkB,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACA,6CACa,6CADb,OAGF,yEAIE,+BAAOD,KAAKpB,MAAMsB,MAElB,mBACED,UAAU,WACVE,KAAK,iBACLR,OAAO,SACPS,IAAI,sBAJN,8B,GAxCUC,aAqDH1B,IC5CA2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c9942fd8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    track: '',\r\n    id: ''\r\n  }\r\ncomponentDidMount() {\r\n    this.fetchResponse()\r\n  }\r\n\r\nfetchResponse = async () => {\r\n    const response = await fetch(`/api/track`)\r\n    const initialTrackResponse = await response.json()\r\n    const track = initialTrackResponse.track\r\n    this.setState({ track })\r\n  }\r\ncustomTrack = async evt => {\r\n    evt.preventDefault()\r\n    const id = this.state.id\r\n    const response = await fetch(`/api/track/${id}`)\r\n    const custom = await response.json()\r\n    const track = custom.track\r\n    this.setState({ track, id: '' })\r\n  }\r\nhandleChange = evt => {\r\n    this.setState({ [evt.target.name]: evt.target.value })\r\n    console.log(this.state.id)\r\n  }\r\nrender() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n        <h1>\r\n          Welcome to <code>Tunescout</code>.\r\n        </h1>\r\n      <p>\r\n          Search for a song, we'll do the rest!\r\n        </p>\r\n        </header>\r\n        <code>{this.state.cow}</code>\r\n        \r\n        <a\r\n          className=\"App-link\"\r\n          href=\"www.google.com\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Google it\r\n        </a>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}